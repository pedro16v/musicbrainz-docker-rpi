# Description: Simple Raspberry Pi memory-optimized settings (no sysctl requirements)
# This configuration works without requiring system-level kernel parameter changes

services:
  db:
    command: |
      postgres 
      -c "shared_buffers=256MB" 
      -c "max_connections=25" 
      -c "work_mem=8MB" 
      -c "maintenance_work_mem=128MB"
      -c "effective_cache_size=512MB"
      -c "temp_buffers=8MB"
      -c "max_prepared_transactions=0"
      -c "wal_buffers=4MB"
      -c "checkpoint_completion_target=0.9"
      -c "checkpoint_timeout=15min"
      -c "max_wal_size=1GB"
      -c "min_wal_size=80MB"
      -c "random_page_cost=1.1"
      -c "effective_io_concurrency=200"
      -c "shared_preload_libraries=pg_amqp.so"
    deploy:
      resources:
        limits:
          memory: 1GB
        reservations:
          memory: 512MB
    environment:
      - POSTGRES_INITDB_ARGS=--data-checksums

  redis:
    deploy:
      resources:
        limits:
          memory: 64MB
        reservations:
          memory: 32MB

  musicbrainz-minimal:
    deploy:
      resources:
        limits:
          memory: 256MB
        reservations:
          memory: 128MB
    environment:
      # Reduce memory usage during import
      - MUSICBRAINZ_SERVER_PROCESSES=1
      - MUSICBRAINZ_IMPORT_CHUNK_SIZE=1000
